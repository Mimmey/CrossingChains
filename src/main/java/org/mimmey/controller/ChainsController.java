package org.mimmey.controller;

import org.mimmey.chain.Chain;
import org.mimmey.exception.NoSuchChainException;
import org.mimmey.exception.validation.controller.IllegalChainAdditionException;

/**
 * <p>
 * Контроллер очередей. Содержит очереди, которые могут пересекаться
 * (то есть, существуют элементы, равные по значению и расположенные
 * на одинаковых позициях во всех очередях). Расстояния от точки пересечения
 * до следующей за ней называется ребром. Ребра в очередях могут принимать любые
 * неотрицательные значения, при этом очередь должна содержать столько
 * элементов, чтобы индексы пересечений не вышли за границы их списка.
 * </p>
 * <p>
 * Контроллер имеет метод push(String, Т), который "проталкивает" новый элемент
 * в очередь и возвращает элемент из ее головы. При таком "проталкивании" изменяются и другие
 * очереди, т.к. элементы-пересечения сдвигаются "толкаемой" очередью.
 * </p>
 * <p>
 * Предполагается, что все очереди пересекаются в одних и тех же местах
 * (иными словами, если имеет место пересечение двух очередей в контроллере,
 * то все остальные очереди пересекаются с ними и между собой в том же месте).
 * Из этого следует, что все очереди должны иметь одинаковое количество точек пересечения
 * </p>
 */
public interface ChainsController<T> {

    /**
     * Кладет копию очереди в контроллер
     *
     * @param chain очередь, которую необходимо добавить в контроллер
     * @throws IllegalChainAdditionException если очередь содержит отличное от других
     *                                       количество ребер
     */
    void addChain(Chain<T> chain);

    /**
     * Возвращает копию очереди, находящейся в контроллере
     *
     * @param chainLabel название необходимой очереди
     * @return копия требуемой очереди
     * @throws NoSuchChainException если такой очереди в контроллере нет
     */
    Chain<T> getChain(String chainLabel);

    /**
     * Вставляет элемент в хвост очереди и "выталкивает" (возвращает и удаляет)
     * элемент из головы
     *
     * @param chainLabel   название очереди
     * @param pushingValue элемент, который необходимо вставить в хвост
     * @return вытолкнутый из головы элемент
     * @throws NoSuchChainException если оереди с таким названием в контроллере нет
     */
    T push(String chainLabel, T pushingValue);
}
